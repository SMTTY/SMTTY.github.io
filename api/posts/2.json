{"total":41,"pageSize":12,"pageCount":4,"data":[{"title":"CF1742E.Scuza","uid":"4cbd9d4467c43b05e611447308ee64f8","slug":"CF1742E.Scuza","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1742E.Scuza.json","cover":"/images/cf.png","text":"原题链接：CF1742E 题目大意：有这么一段楼梯，总共有n级台阶，设地面高度是0，每段楼梯距离前一级楼梯(或者地面)有一定高度ai，总共有q个问题，每个问题给出一个人所能跨上的最高距离，我们需要计算出这个人最高能上升的高度。共给出t组数据，每组数据第一行给出n，q表示台阶数和问...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心.json"},{"name":"二分查找","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1743C.Save the Magazines","uid":"e185d61ae3cd4ae90fd39cfd13028509","slug":"CF1743C.Save the Magazines","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1743C.Save the Magazines.json","cover":"/images/cf.png","text":"原题链接：CF1743C 题目大意：有个人收集了很多有价值的报纸，分别放在了从编号1到n的n个箱子中，有个箱子有盖子，而有的箱子没有，记第i个箱子中的报纸数为ai;突然！就很突然，下雨了，有盖子的箱子中的报纸不会被淋湿，而没盖子的箱子中报纸会被淋湿，这个人想去拯救尽可能多的报纸，...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 137 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2.json"},{"name":"D1100","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100.json"},{"name":"贪心","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100/贪心","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Educational Codeforces Round 137 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-137-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-137-Rated-for-Div-2.json"},{"name":"D1100","slug":"D1100","count":2,"path":"api/tags/D1100.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1722D.Line","uid":"b6f2c460c174967b06c32707c0b7231a","slug":"CF1722D.Line","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1722D.Line.json","cover":"/images/cf.png","text":"原题链接：CF1722D 题目大意：有n个人站在一条水平线上，每个人要么向左看，要么向右看，每个人都数着他们所看向的方向上能看到多少人，他们看到的人数之和记为每个人的计数之和；比方说，队列LRRLL中，L表示该位置的人向左看，R表示向右看，那么这个队列每个人的计数为[0, 3, ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"D1100","count":2,"path":"api/tags/D1100.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1716B.Permutation Chain","uid":"235723fad9e0f351ec569d7c8ca68497","slug":"CF1716B.Permutation Chain","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1716B.Permutation Chain.json","cover":"/images/cf.png","text":"原题链接：CF1716B 题目大意：定义第i个数刚好是i的点为不动点，一个排列的不动性是其中不动点的数量；给出t组数据；在每组数据中，给出一个n，我们需要构造尽可能多的序列，使其不动性依次严格递减。每组数据输出最多的序列数k，然后接下来k行输出这些排列(答案有很多种，满足题意即可...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800.json"},{"name":"数学","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"数学","slug":"数学","count":1,"path":"api/tags/数学.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1744C.Traffic Light","uid":"5329850074d4a4358b32a48b44c0c487","slug":"CF1744C.Traffic Light","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744C.Traffic Light.json","cover":"/images/cf.png","text":"原题链接：CF1744C 题目大意：有那么有一个有大病的交通信号灯，它会按一个规律一直循环闪烁(依然还是RYG三色，且还是只有绿灯可以通行)，这个规律用一个字符串描述，如rggry，那么它的闪烁就是rggryrggry…循环往复，可以知道现在的红绿灯时什么颜色，但是不知道现在的时...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1000","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000.json"},{"name":"双指针","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"D1000","slug":"D1000","count":3,"path":"api/tags/D1000.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"},{"name":"双指针","slug":"双指针","count":1,"path":"api/tags/双指针.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1744D.Divisibility by 2^n","uid":"f43c88fb6011bc7c9f20123aabe01edd","slug":"CF1744D.Divisibility by 2^n","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744D.Divisibility by 2^n.json","cover":"/images/cf.png","text":"原题链接:CF1744D 题目大意：共有t组数据，每组数据给出一个n，然后在下一行中给出n个数字a1,a2,…,an。可以执行一种操作：取i∈[1, n]，使得ai&#x3D;ai*i，对于每个i最多只能执行一次操作。问：操作多少次可以使得Π(pai，求积符号)ai能被2n整除，...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1749B.Death's Blessing","uid":"ec81d70b1346c4b4569d5c4b5f32b11d","slug":"CF1749B.Death's Blessing","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/CF1749B.Death's Blessing.json","cover":"/images/cf.png","text":"原题链接：CF1749B 题目大意：游戏中，有一排怪物，他们都有一定的血量，分别为a1,a2,…,an，同时，每个怪物都有一个死亡祝福bi，当某一怪物被杀死后，他身旁的怪物的生命会受到死亡祝福增加(怪物站成一排，第一个和最后一个怪物不相邻)，并且当一个怪物被杀死后，整排会缩小，使...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 138 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2.json"},{"name":"D900","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900.json"},{"name":"贪心","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900/贪心","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Educational Codeforces Round 138 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-138-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-138-Rated-for-Div-2.json"},{"name":"D900","slug":"D900","count":1,"path":"api/tags/D900.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"区间合并","uid":"e2877b7fa24b8c65939a980db8467f26","slug":"区间合并","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/区间合并.json","cover":null,"text":"非常好理解的板子，用的也非常少，就是把区间合并。 板子如下：&#x2F;&#x2F; 将所有存在交集的区间合并 typedef pair&lt;int, int&gt; PII; void merge(vector&lt;PII&gt; &amp;segs) &#123; vec...","link":"","photos":[],"count_time":{"symbolsCount":634,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"区间合并","slug":"算法模板/区间合并","count":1,"path":"api/categories/算法模板/区间合并.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"区间合并","slug":"区间合并","count":1,"path":"api/tags/区间合并.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"差分","uid":"5996424ecd7fa41d224f56f7fc47f943","slug":"差分","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/差分.json","cover":null,"text":"差分用于大量的数组中部分数据的加减操作，不必再遍历部分区间进行加减，而是通过对部分位置的操作即可完成对区间所有元素的加减，最后再累加即可得到每个元素的值。 一维差分板子：&#x2F;&#x2F;给区间[l, r]中的每个数加上c： B[l] +&#x3D; c, B[r + 1]...","link":"","photos":[],"count_time":{"symbolsCount":446,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"差分","slug":"算法模板/差分","count":1,"path":"api/categories/算法模板/差分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"栈","uid":"79d3d24c6264cf3d036dbffe252e1981","slug":"栈","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/栈.json","cover":null,"text":"栈：&#x2F;&#x2F; tt表示栈顶 int stk[N], tt &#x3D; 0; &#x2F;&#x2F; 向栈顶插入一个数 stk[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从栈顶弹出一个数 tt -- ; &#x2F;&#x2F; 栈顶的值 s...","link":"","photos":[],"count_time":{"symbolsCount":202,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"栈","slug":"算法模板/数据结构/栈","count":1,"path":"api/categories/算法模板/数据结构/栈.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"栈","slug":"栈","count":1,"path":"api/tags/栈.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1002[NOIP2002 普及组]过河卒","uid":"b48ae5252cdf21a431ed1030afed6c71","slug":"洛谷P1002[NOIP2002 普及组]过河卒","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1002[NOIP2002 普及组]过河卒.json","cover":"/images/lg.jpg","text":"原题链接：LuoguP1002 题目分析：就是如果可以走到点(i，j)，那么方案数f(i, j) &#x3D; f(i - 1, j) + f(i, j - 1)。数据范围：1 &lt;&#x3D; n, m &lt;&#x3D; 20，0 &lt;&#x3D; 马的坐标 &lt...","link":"","photos":[],"count_time":{"symbolsCount":915,"symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":5,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷橙题","slug":"题记/洛谷/洛谷橙题","count":2,"path":"api/categories/题记/洛谷/洛谷橙题.json"},{"name":"dp","slug":"题记/洛谷/洛谷橙题/dp","count":1,"path":"api/categories/题记/洛谷/洛谷橙题/dp.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":5,"path":"api/tags/洛谷.json"},{"name":"洛谷橙题","slug":"洛谷橙题","count":2,"path":"api/tags/洛谷橙题.json"},{"name":"dp","slug":"dp","count":1,"path":"api/tags/dp.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1955[NOI2015]程序自动分析","uid":"911a72b9cf1301cce1d0e6e3bd36166b","slug":"洛谷P1955[NOI2015]程序自动分析","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1955[NOI2015]程序自动分析.json","cover":"/images/lg.jpg","text":"原题链接：LuoguP1955 用到的知识：并查集、离散化 题目大意：总共有t个问题数；每次问题都是独立的，且每个问题都有若干条件，在每个问题中给出一个正整数n，代表条件的关系数，接下来的n行中每行有三个数i, j, e表示约束条件，当e为1时表示条件i &#x3D; 条件j，当...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":21,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":5,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷绿题","slug":"题记/洛谷/洛谷绿题","count":2,"path":"api/categories/题记/洛谷/洛谷绿题.json"},{"name":"并查集","slug":"题记/洛谷/洛谷绿题/并查集","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集.json"},{"name":"离散化","slug":"题记/洛谷/洛谷绿题/并查集/离散化","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集/离散化.json"}],"tags":[{"name":"题记","slug":"题记","count":21,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":5,"path":"api/tags/洛谷.json"},{"name":"洛谷绿题","slug":"洛谷绿题","count":2,"path":"api/tags/洛谷绿题.json"},{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"},{"name":"离散化","slug":"离散化","count":2,"path":"api/tags/离散化.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}]}