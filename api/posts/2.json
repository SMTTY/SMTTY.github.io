{"total":34,"pageSize":12,"pageCount":3,"data":[{"title":"区间合并","uid":"e2877b7fa24b8c65939a980db8467f26","slug":"区间合并","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/区间合并.json","cover":null,"text":"非常好理解的板子，用的也非常少，就是把区间合并。 板子如下：&#x2F;&#x2F; 将所有存在交集的区间合并 typedef pair&lt;int, int&gt; PII; void merge(vector&lt;PII&gt; &amp;segs) &#123; vec...","link":"","photos":[],"count_time":{"symbolsCount":634,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"区间合并","slug":"算法模板/区间合并","count":1,"path":"api/categories/算法模板/区间合并.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"区间合并","slug":"区间合并","count":1,"path":"api/tags/区间合并.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"差分","uid":"5996424ecd7fa41d224f56f7fc47f943","slug":"差分","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/差分.json","cover":null,"text":"差分用于大量的数组中部分数据的加减操作，不必再遍历部分区间进行加减，而是通过对部分位置的操作即可完成对区间所有元素的加减，最后再累加即可得到每个元素的值。 一维差分板子：&#x2F;&#x2F;给区间[l, r]中的每个数加上c： B[l] +&#x3D; c, B[r + 1]...","link":"","photos":[],"count_time":{"symbolsCount":446,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"差分","slug":"算法模板/差分","count":1,"path":"api/categories/算法模板/差分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"栈","uid":"79d3d24c6264cf3d036dbffe252e1981","slug":"栈","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/栈.json","cover":null,"text":"栈：&#x2F;&#x2F; tt表示栈顶 int stk[N], tt &#x3D; 0; &#x2F;&#x2F; 向栈顶插入一个数 stk[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从栈顶弹出一个数 tt -- ; &#x2F;&#x2F; 栈顶的值 s...","link":"","photos":[],"count_time":{"symbolsCount":202,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"栈","slug":"算法模板/数据结构/栈","count":1,"path":"api/categories/算法模板/数据结构/栈.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"栈","slug":"栈","count":1,"path":"api/tags/栈.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1002[NOIP2002 普及组]过河卒","uid":"b48ae5252cdf21a431ed1030afed6c71","slug":"洛谷P1002[NOIP2002 普及组]过河卒","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1002[NOIP2002 普及组]过河卒.json","cover":null,"text":"原题链接LuoguP1002 题目分析：就是如果可以走到点(i，j)，那么方案数f(i, j) &#x3D; f(i - 1, j) + f(i, j - 1)。数据范围：1 &lt;&#x3D; n, m &lt;&#x3D; 20，0 &lt;&#x3D; 马的坐标 &lt;...","link":"","photos":[],"count_time":{"symbolsCount":914,"symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":3,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷橙题","slug":"题记/洛谷/洛谷橙题","count":1,"path":"api/categories/题记/洛谷/洛谷橙题.json"},{"name":"dp","slug":"题记/洛谷/洛谷橙题/dp","count":1,"path":"api/categories/题记/洛谷/洛谷橙题/dp.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":3,"path":"api/tags/洛谷.json"},{"name":"洛谷橙题","slug":"洛谷橙题","count":1,"path":"api/tags/洛谷橙题.json"},{"name":"dp","slug":"dp","count":1,"path":"api/tags/dp.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1955[NOI2015]程序自动分析","uid":"911a72b9cf1301cce1d0e6e3bd36166b","slug":"洛谷P1955[NOI2015]程序自动分析","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1955[NOI2015]程序自动分析.json","cover":null,"text":"原题链接LuoguP1955用到的知识：并查集、离散化 题目大意：总共有t个问题数；每次问题都是独立的，且每个问题都有若干条件，在每个问题中给出一个正整数n，代表条件的关系数，接下来的n行中每行有三个数i, j, e表示约束条件，当e为1时表示条件i &#x3D; 条件j，当e为...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":3,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷绿题","slug":"题记/洛谷/洛谷绿题","count":2,"path":"api/categories/题记/洛谷/洛谷绿题.json"},{"name":"并查集","slug":"题记/洛谷/洛谷绿题/并查集","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集.json"},{"name":"离散化","slug":"题记/洛谷/洛谷绿题/并查集/离散化","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集/离散化.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":3,"path":"api/tags/洛谷.json"},{"name":"洛谷绿题","slug":"洛谷绿题","count":2,"path":"api/tags/洛谷绿题.json"},{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"},{"name":"离散化","slug":"离散化","count":2,"path":"api/tags/离散化.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"链表","uid":"0d5be13038d02acb3bbf4a07263c6953","slug":"链表","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/链表.json","cover":null,"text":"单链表：&#x2F;&#x2F; head存储链表头，e[]存储节点的值，ne[]存储节点的next指针，idx表示当前用到了哪个节点 int head, e[N], ne[N], idx; &#x2F;&#x2F; 初始化 void init() &#123; head &#x...","link":"","photos":[],"count_time":{"symbolsCount":879,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"链表","slug":"算法模板/数据结构/链表","count":1,"path":"api/categories/算法模板/数据结构/链表.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"队列","uid":"1840725987698b4cef5a9ce40df0584c","slug":"队列","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/队列.json","cover":null,"text":"普通队列：&#x2F;&#x2F; hh 表示队头，tt表示队尾 int q[N], hh &#x3D; 0, tt &#x3D; -1; &#x2F;&#x2F; 向队尾插入一个数 q[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从队头弹出一个数 hh ++ ...","link":"","photos":[],"count_time":{"symbolsCount":534,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"队列","slug":"算法模板/数据结构/队列","count":1,"path":"api/categories/算法模板/数据结构/队列.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"队列","slug":"队列","count":1,"path":"api/tags/队列.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"离散化","uid":"7f00768b865696d227f7b794a43f7717","slug":"离散化","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/离散化.json","cover":null,"text":"对于一个非常大的数据范围内，需要使用的值远远小于数据范围的时候，需要用离散化去优化，即将所有需要用到的值映射到一个小的数据范围中。其中有的题的离散化需要保序，即若x&lt;y，则离散化后x’&lt;y’也要成立；而有的题则不需要保序，可以用哈希表去进行映射操作，花费时间更少。 保...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"离散化","slug":"算法模板/离散化","count":1,"path":"api/categories/算法模板/离散化.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"离散化","slug":"离散化","count":2,"path":"api/tags/离散化.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1746A.Maxmina","uid":"e88334e7a5c70ad04602dfc5e3fc14b6","slug":"CF1746A.Maxmina","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1746A.Maxmina.json","cover":null,"text":"原题链接CF1746A 题目大意：总共有t组数字，每组数据给出一个序列长度n和一个数字k，接下来会有n个数（记作a1, a2,…, an）且仅为0或1。可以执行以下两种操作：1.选择一个数字i∈[1, n - 1]，使得ai &#x3D; ai+1 &#x3D; min(ai, ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Global Round 23","slug":"题记/Codeforces/Codeforces-Global-Round-23","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Global-Round-23/D800","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Global-Round-23/D800/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"Codeforces Global Round 23","slug":"Codeforces-Global-Round-23","count":1,"path":"api/tags/Codeforces-Global-Round-23.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1754A.Technical Support","uid":"944cbc217b8e8a1f5e95edb3117a8bea","slug":"CF1754A.Technical Support","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1754A.Technical Support.json","cover":null,"text":"原题链接CF1754A 题目大意：总共有t组数据，每组数据给出一个n，随后给出n个字符，且字符仅为Q或者A。问：所有的Q能否在其后面找到A配对，每个Q、A只能配对一次，能就输出Yes，不能就输出No。数据范围：1 &lt;&#x3D; t &lt;&#x3D; 500，1 &lt...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"题记/Codeforces/Codeforces-Round-829-Div-2","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"Codeforces-Round-829-Div-2","count":2,"path":"api/tags/Codeforces-Round-829-Div-2.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1754B.Kevin and Permutation","uid":"7c8267ca3bcbb0a1983078a7d4c8df82","slug":"CF1754B.Kevin and Permutation","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1754B.Kevin and Permutation.json","cover":null,"text":"原题链接CF1754B 题目大意：总共有t组数据，每组数据给出一个n，输出一个从1到n的排列，使得min(|pi+1-pi|)最大。即：找出使任意两个数的差值的最小值最大的一个排列，如果有多种答案，输出一种即可。数据范围：1 &lt;&#x3D; t &lt;&#x3D; 100...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"题记/Codeforces/Codeforces-Round-829-Div-2","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"Codeforces-Round-829-Div-2","count":2,"path":"api/tags/Codeforces-Round-829-Div-2.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P3853[TJOI2007]路标设置","uid":"241d076c874b2badab1c87882a2d2fef","slug":"洛谷P3853[TJOI2007]路标设置","date":"2022-11-03T16:00:00.000Z","updated":"2022-11-03T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P3853[TJOI2007]路标设置.json","cover":null,"text":"原题链接LuoguP3853用到的知识：整数二分 题目大意：在一段长 L 的公路上某些地方设有 N 个路标（保证起点终点开始时都有路标），它们的位置是与起点的距离表示，但是有人还是嫌少，所以又要添加 K 个路标，路标可以添加到任意位置。涉及的所有数据全部都为整数，2 &lt;&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":3,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷绿题","slug":"题记/洛谷/洛谷绿题","count":2,"path":"api/categories/题记/洛谷/洛谷绿题.json"},{"name":"二分查找","slug":"题记/洛谷/洛谷绿题/二分查找","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/二分查找.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"},{"name":"洛谷","slug":"洛谷","count":3,"path":"api/tags/洛谷.json"},{"name":"洛谷绿题","slug":"洛谷绿题","count":2,"path":"api/tags/洛谷绿题.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}]}