{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"洛谷P4145上帝造题的七分钟2/花神游历各国","uid":"82c5266900e554d28363dfa4bc63c789","slug":"洛谷P4145上帝造题的七分钟2 花神游历各国","date":"2023-01-01T16:00:00.000Z","updated":"2023-01-01T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P4145上帝造题的七分钟2 花神游历各国.json","keywords":"notes","cover":null,"text":"原题链接LuoguP4145 题目大意：首先第一行给出一个数字n，随后在下一行给出的n个整数作为初始数列，第三行给出一个m，代表有m个操作，在接下来的m行，每行包含三个整数k,l,r，其中k表示操作： k &#x3D; 0，表示给[l, r]区间内每个元素开平方(向下取整)。 k...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":4,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷蓝题","slug":"题记/洛谷/洛谷蓝题","count":1,"path":"api/categories/题记/洛谷/洛谷蓝题.json"},{"name":"线段树","slug":"题记/洛谷/洛谷蓝题/线段树","count":1,"path":"api/categories/题记/洛谷/洛谷蓝题/线段树.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":4,"path":"api/tags/洛谷.json"},{"name":"洛谷蓝题","slug":"洛谷蓝题","count":1,"path":"api/tags/洛谷蓝题.json"},{"name":"线段树","slug":"线段树","count":2,"path":"api/tags/线段树.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"线段树整理","uid":"e0aa9ca13b84c518e471c68dfb7b2c45","slug":"线段树整理","date":"2023-01-01T16:00:00.000Z","updated":"2023-01-01T16:00:00.000Z","comments":true,"path":"api/articles/线段树整理.json","keywords":"notes","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"整理","slug":"整理","count":1,"path":"api/categories/整理.json"},{"name":"线段树","slug":"整理/线段树","count":1,"path":"api/categories/整理/线段树.json"}],"tags":[{"name":"线段树","slug":"线段树","count":2,"path":"api/tags/线段树.json"},{"name":"整理","slug":"整理","count":1,"path":"api/tags/整理.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"博客简述","uid":"6b11c3b4174be8f0fe049e7a3fa727bd","slug":"博客简述","date":"2022-10-28T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/博客简述.json","keywords":"notes","cover":"/images/1.jpg","text":"这个博客将被我用作笔记和题记以及听课笔记，也是我做的第一个博客，如果有需要可以通过概览中的洛谷以及CSDN联系到我，或者联系我的QQ：1075506339 也可以。笔记中如有错误，敬请雅正，如有疑惑，欢迎讨论，如有补充，您的宝贵意见将会是我的莫大荣幸。如果我的笔记或是题解对您有所...","link":"","photos":[],"count_time":{"symbolsCount":460,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"CF1715B.Beautiful Array","uid":"16d11b6b9cafe480a32d8ef693f3287f","slug":"CF1715B.Beautiful Array","date":"2022-11-14T06:40:22.319Z","updated":"2022-12-26T11:35:42.824Z","comments":true,"path":"api/articles/CF1715B.Beautiful Array.json","keywords":"notes","cover":null,"text":"题目大意：定义长度为n的，仅包含非负数的《美丽的数组a》满足如下条件：1.Σai &#x3D; s；2.Σ[ai &#x2F; k] &#x3D; b(设[]为取整符号)。给出t组数据，每组数据给出n，k，b，s，如果可以构造出美丽的数组，输出一中满足条件的情况即可，如果无法构成...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#816 (Div. 2)","slug":"题记/Codeforces/Codeforces-Round-816-Div-2","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-816-Div-2.json"},{"name":"D1000","slug":"题记/Codeforces/Codeforces-Round-816-Div-2/D1000","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-816-Div-2/D1000.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-816-Div-2/D1000/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-816-Div-2/D1000/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D1000","slug":"D1000","count":3,"path":"api/tags/D1000.json"},{"name":"Codeforces Round#816 (Div. 2)","slug":"Codeforces-Round-816-Div-2","count":1,"path":"api/tags/Codeforces-Round-816-Div-2.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1748B.Diverse Substrings","uid":"be568de8bdceebc7a1f08f027f734efa","slug":"CF1748B.Diverse Substrings","date":"2022-11-14T05:58:26.190Z","updated":"2022-12-26T11:36:30.452Z","comments":true,"path":"api/articles/CF1748B.Diverse Substrings.json","keywords":"notes","cover":null,"text":"原题链接CF1748B 题目大意：在t组数据中，每一组给出一个长度为n的字符串，字符串所有可能包含的数字为[0, 9]。定义多样化的一个概念，即如果字符串中一个数字的出现次数小于等于该字符串出现的不同数字的数量，那么这个字符串是多样化的。例如：1.”7”具有多样性，其中7出现的次...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#833 (Div. 2)","slug":"题记/Codeforces/Codeforces-Round-833-Div-2","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-833-Div-2.json"},{"name":"D1400","slug":"题记/Codeforces/Codeforces-Round-833-Div-2/D1400","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-833-Div-2/D1400.json"},{"name":"暴力","slug":"题记/Codeforces/Codeforces-Round-833-Div-2/D1400/暴力","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-833-Div-2/D1400/暴力.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"暴力","slug":"暴力","count":2,"path":"api/tags/暴力.json"},{"name":"Codeforces Round#833 (Div. 2)","slug":"Codeforces-Round-833-Div-2","count":1,"path":"api/tags/Codeforces-Round-833-Div-2.json"},{"name":"D1400","slug":"D1400","count":1,"path":"api/tags/D1400.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1598B.Groups","uid":"68b928afb15542d56e18953acc9e7637","slug":"CF1598B.Groups","date":"2022-11-10T16:00:00.000Z","updated":"2022-11-10T16:00:00.000Z","comments":true,"path":"api/articles/CF1598B.Groups.json","keywords":"notes","cover":null,"text":"原题链接CF1598B 题目大意：在每组测试数据中，给出n个人(n为偶数)，然后在n行中每行由5个或0或1的数字组成，用来描述这个人周一到周五哪一天方便上课，有课为1，没课为0。问：能否将这n个人均分为两组，每一组都能在同一天上课，且两组上课不在同一天。数据范围：1 &lt;&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 115 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2.json"},{"name":"D1000","slug":"题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2/D1000","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2/D1000.json"},{"name":"暴力","slug":"题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2/D1000/暴力","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-115-Rated-for-Div-2/D1000/暴力.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"Educational Codeforces Round 115 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-115-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-115-Rated-for-Div-2.json"},{"name":"D1000","slug":"D1000","count":3,"path":"api/tags/D1000.json"},{"name":"暴力","slug":"暴力","count":2,"path":"api/tags/暴力.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"Trie树","uid":"93f431eb174c74436b204f9604320531","slug":"Trie树","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-09T16:00:00.000Z","comments":true,"path":"api/articles/Trie树.json","keywords":"notes","cover":null,"text":"一种以树状结构储存字符串的方法。 板子如下：int son[N][26], cnt[N], idx; &#x2F;&#x2F; 0号点既是根节点，又是空节点 &#x2F;&#x2F; son[][]存储树中每个节点的子节点 &#x2F;&#x2F; cnt[]存储以每个节点结尾的...","link":"","photos":[],"count_time":{"symbolsCount":696,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"Trie树","slug":"算法模板/数据结构/Trie树","count":1,"path":"api/categories/算法模板/数据结构/Trie树.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"Trie树","slug":"Trie树","count":1,"path":"api/tags/Trie树.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1742E.Scuza","uid":"4cbd9d4467c43b05e611447308ee64f8","slug":"CF1742E.Scuza","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1742E.Scuza.json","keywords":"notes","cover":null,"text":"原题链接CF1742E 题目大意：有这么一段楼梯，总共有n级台阶，设地面高度是0，每段楼梯距离前一级楼梯(或者地面)有一定高度ai，总共有q个问题，每个问题给出一个人所能跨上的最高距离，我们需要计算出这个人最高能上升的高度。共给出t组数据，每组数据第一行给出n，q表示台阶数和问题...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心.json"},{"name":"二分查找","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1722D.Line","uid":"b6f2c460c174967b06c32707c0b7231a","slug":"CF1722D.Line","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1722D.Line.json","keywords":"notes","cover":null,"text":"原题链接CF1722D 题目大意：有n个人站在一条水平线上，每个人要么向左看，要么向右看，每个人都数着他们所看向的方向上能看到多少人，他们看到的人数之和记为每个人的计数之和；比方说，队列LRRLL中，L表示该位置的人向左看，R表示向右看，那么这个队列每个人的计数为[0, 3, 2...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"D1100","count":2,"path":"api/tags/D1100.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1743C.Save the Magazines","uid":"e185d61ae3cd4ae90fd39cfd13028509","slug":"CF1743C.Save the Magazines","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1743C.Save the Magazines.json","keywords":"notes","cover":null,"text":"原题链接CF1743C 题目大意：有个人收集了很多有价值的报纸，分别放在了从编号1到n的n个箱子中，有个箱子有盖子，而有的箱子没有，记第i个箱子中的报纸数为ai;突然！就很突然，下雨了，有盖子的箱子中的报纸不会被淋湿，而没盖子的箱子中报纸会被淋湿，这个人想去拯救尽可能多的报纸，所...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 137 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2.json"},{"name":"D1100","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100.json"},{"name":"贪心","slug":"题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100/贪心","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-137-Rated-for-Div-2/D1100/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D1100","slug":"D1100","count":2,"path":"api/tags/D1100.json"},{"name":"Educational Codeforces Round 137 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-137-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-137-Rated-for-Div-2.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1716B.Permutation Chain","uid":"235723fad9e0f351ec569d7c8ca68497","slug":"CF1716B.Permutation Chain","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1716B.Permutation Chain.json","keywords":"notes","cover":null,"text":"原题链接CF1716B 题目大意：定义第i个数刚好是i的点为不动点，一个排列的不动性是其中不动点的数量；给出t组数据；在每组数据中，给出一个n，我们需要构造尽可能多的序列，使其不动性依次严格递减。每组数据输出最多的序列数k，然后接下来k行输出这些排列(答案有很多种，满足题意即可)...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800.json"},{"name":"数学","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"数学","slug":"数学","count":1,"path":"api/tags/数学.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1744D.Divisibility by 2^n","uid":"f43c88fb6011bc7c9f20123aabe01edd","slug":"CF1744D.Divisibility by 2^n","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744D.Divisibility by 2^n.json","keywords":"notes","cover":null,"text":"原题链接CF1744D 题目大意：共有t组数据，每组数据给出一个n，然后在下一行中给出n个数字a1,a2,…,an。可以执行一种操作：取i∈[1, n]，使得ai&#x3D;ai*i，对于每个i最多只能执行一次操作。问：操作多少次可以使得Π(pai，求积符号)ai能被2n整除，若...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1744C.Traffic Light","uid":"5329850074d4a4358b32a48b44c0c487","slug":"CF1744C.Traffic Light","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744C.Traffic Light.json","keywords":"notes","cover":null,"text":"原题链接CF1744C 题目大意：有那么有一个有大病的交通信号灯，它会按一个规律一直循环闪烁(依然还是RYG三色，且还是只有绿灯可以通行)，这个规律用一个字符串描述，如rggry，那么它的闪烁就是rggryrggry…循环往复，可以知道现在的红绿灯时什么颜色，但是不知道现在的时间...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1000","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000.json"},{"name":"双指针","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D1000","slug":"D1000","count":3,"path":"api/tags/D1000.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"},{"name":"双指针","slug":"双指针","count":1,"path":"api/tags/双指针.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1749B.Death's Blessing","uid":"ec81d70b1346c4b4569d5c4b5f32b11d","slug":"CF1749B.Death's Blessing","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/CF1749B.Death's Blessing.json","keywords":"notes","cover":null,"text":"原题链接CF1749B 题目大意：游戏中，有一排怪物，他们都有一定的血量，分别为a1,a2,…,an，同时，每个怪物都有一个死亡祝福bi，当某一怪物被杀死后，他身旁的怪物的生命会受到死亡祝福增加(怪物站成一排，第一个和最后一个怪物不相邻)，并且当一个怪物被杀死后，整排会缩小，使得...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 138 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2.json"},{"name":"D900","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900.json"},{"name":"贪心","slug":"题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900/贪心","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-138-Rated-for-Div-2/D900/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Educational Codeforces Round 138 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-138-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-138-Rated-for-Div-2.json"},{"name":"D900","slug":"D900","count":1,"path":"api/tags/D900.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"区间合并","uid":"e2877b7fa24b8c65939a980db8467f26","slug":"区间合并","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/区间合并.json","keywords":"notes","cover":null,"text":"非常好理解的板子，用的也非常少，就是把区间合并。 板子如下：&#x2F;&#x2F; 将所有存在交集的区间合并 typedef pair&lt;int, int&gt; PII; void merge(vector&lt;PII&gt; &amp;segs) &#123; vec...","link":"","photos":[],"count_time":{"symbolsCount":634,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"区间合并","slug":"算法模板/区间合并","count":1,"path":"api/categories/算法模板/区间合并.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"区间合并","slug":"区间合并","count":1,"path":"api/tags/区间合并.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"差分","uid":"5996424ecd7fa41d224f56f7fc47f943","slug":"差分","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/差分.json","keywords":"notes","cover":null,"text":"差分用于大量的数组中部分数据的加减操作，不必再遍历部分区间进行加减，而是通过对部分位置的操作即可完成对区间所有元素的加减，最后再累加即可得到每个元素的值。 一维差分板子：&#x2F;&#x2F;给区间[l, r]中的每个数加上c： B[l] +&#x3D; c, B[r + 1]...","link":"","photos":[],"count_time":{"symbolsCount":446,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"差分","slug":"算法模板/差分","count":1,"path":"api/categories/算法模板/差分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"差分","slug":"差分","count":1,"path":"api/tags/差分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1002[NOIP2002 普及组]过河卒","uid":"b48ae5252cdf21a431ed1030afed6c71","slug":"洛谷P1002[NOIP2002 普及组]过河卒","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1002[NOIP2002 普及组]过河卒.json","keywords":"notes","cover":null,"text":"原题链接LuoguP1002 题目分析：就是如果可以走到点(i，j)，那么方案数f(i, j) &#x3D; f(i - 1, j) + f(i, j - 1)。数据范围：1 &lt;&#x3D; n, m &lt;&#x3D; 20，0 &lt;&#x3D; 马的坐标 &lt;...","link":"","photos":[],"count_time":{"symbolsCount":914,"symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":4,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷橙题","slug":"题记/洛谷/洛谷橙题","count":1,"path":"api/categories/题记/洛谷/洛谷橙题.json"},{"name":"dp","slug":"题记/洛谷/洛谷橙题/dp","count":1,"path":"api/categories/题记/洛谷/洛谷橙题/dp.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":4,"path":"api/tags/洛谷.json"},{"name":"洛谷橙题","slug":"洛谷橙题","count":1,"path":"api/tags/洛谷橙题.json"},{"name":"dp","slug":"dp","count":1,"path":"api/tags/dp.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"栈","uid":"79d3d24c6264cf3d036dbffe252e1981","slug":"栈","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/栈.json","keywords":"notes","cover":null,"text":"栈：&#x2F;&#x2F; tt表示栈顶 int stk[N], tt &#x3D; 0; &#x2F;&#x2F; 向栈顶插入一个数 stk[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从栈顶弹出一个数 tt -- ; &#x2F;&#x2F; 栈顶的值 s...","link":"","photos":[],"count_time":{"symbolsCount":202,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"栈","slug":"算法模板/数据结构/栈","count":1,"path":"api/categories/算法模板/数据结构/栈.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"栈","slug":"栈","count":1,"path":"api/tags/栈.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P1955[NOI2015]程序自动分析","uid":"911a72b9cf1301cce1d0e6e3bd36166b","slug":"洛谷P1955[NOI2015]程序自动分析","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P1955[NOI2015]程序自动分析.json","keywords":"notes","cover":null,"text":"原题链接LuoguP1955用到的知识：并查集、离散化 题目大意：总共有t个问题数；每次问题都是独立的，且每个问题都有若干条件，在每个问题中给出一个正整数n，代表条件的关系数，接下来的n行中每行有三个数i, j, e表示约束条件，当e为1时表示条件i &#x3D; 条件j，当e为...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":4,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷绿题","slug":"题记/洛谷/洛谷绿题","count":2,"path":"api/categories/题记/洛谷/洛谷绿题.json"},{"name":"并查集","slug":"题记/洛谷/洛谷绿题/并查集","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集.json"},{"name":"离散化","slug":"题记/洛谷/洛谷绿题/并查集/离散化","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/并查集/离散化.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"洛谷","slug":"洛谷","count":4,"path":"api/tags/洛谷.json"},{"name":"洛谷绿题","slug":"洛谷绿题","count":2,"path":"api/tags/洛谷绿题.json"},{"name":"并查集","slug":"并查集","count":1,"path":"api/tags/并查集.json"},{"name":"离散化","slug":"离散化","count":2,"path":"api/tags/离散化.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"离散化","uid":"7f00768b865696d227f7b794a43f7717","slug":"离散化","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/离散化.json","keywords":"notes","cover":null,"text":"对于一个非常大的数据范围内，需要使用的值远远小于数据范围的时候，需要用离散化去优化，即将所有需要用到的值映射到一个小的数据范围中。其中有的题的离散化需要保序，即若x&lt;y，则离散化后x’&lt;y’也要成立；而有的题则不需要保序，可以用哈希表去进行映射操作，花费时间更少。 保...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"离散化","slug":"算法模板/离散化","count":1,"path":"api/categories/算法模板/离散化.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"离散化","slug":"离散化","count":2,"path":"api/tags/离散化.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"链表","uid":"0d5be13038d02acb3bbf4a07263c6953","slug":"链表","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/链表.json","keywords":"notes","cover":null,"text":"单链表：&#x2F;&#x2F; head存储链表头，e[]存储节点的值，ne[]存储节点的next指针，idx表示当前用到了哪个节点 int head, e[N], ne[N], idx; &#x2F;&#x2F; 初始化 void init() &#123; head &#x...","link":"","photos":[],"count_time":{"symbolsCount":879,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"链表","slug":"算法模板/数据结构/链表","count":1,"path":"api/categories/算法模板/数据结构/链表.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"队列","uid":"1840725987698b4cef5a9ce40df0584c","slug":"队列","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/队列.json","keywords":"notes","cover":null,"text":"普通队列：&#x2F;&#x2F; hh 表示队头，tt表示队尾 int q[N], hh &#x3D; 0, tt &#x3D; -1; &#x2F;&#x2F; 向队尾插入一个数 q[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从队头弹出一个数 hh ++ ...","link":"","photos":[],"count_time":{"symbolsCount":534,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"队列","slug":"算法模板/数据结构/队列","count":1,"path":"api/categories/算法模板/数据结构/队列.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"队列","slug":"队列","count":1,"path":"api/tags/队列.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1746A.Maxmina","uid":"e88334e7a5c70ad04602dfc5e3fc14b6","slug":"CF1746A.Maxmina","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1746A.Maxmina.json","keywords":"notes","cover":null,"text":"原题链接CF1746A 题目大意：总共有t组数字，每组数据给出一个序列长度n和一个数字k，接下来会有n个数（记作a1, a2,…, an）且仅为0或1。可以执行以下两种操作：1.选择一个数字i∈[1, n - 1]，使得ai &#x3D; ai+1 &#x3D; min(ai, ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Global Round 23","slug":"题记/Codeforces/Codeforces-Global-Round-23","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Global-Round-23/D800","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Global-Round-23/D800/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Global-Round-23/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Global Round 23","slug":"Codeforces-Global-Round-23","count":1,"path":"api/tags/Codeforces-Global-Round-23.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1754A.Technical Support","uid":"944cbc217b8e8a1f5e95edb3117a8bea","slug":"CF1754A.Technical Support","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1754A.Technical Support.json","keywords":"notes","cover":null,"text":"原题链接CF1754A 题目大意：总共有t组数据，每组数据给出一个n，随后给出n个字符，且字符仅为Q或者A。问：所有的Q能否在其后面找到A配对，每个Q、A只能配对一次，能就输出Yes，不能就输出No。数据范围：1 &lt;&#x3D; t &lt;&#x3D; 500，1 &lt...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"题记/Codeforces/Codeforces-Round-829-Div-2","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"Codeforces-Round-829-Div-2","count":2,"path":"api/tags/Codeforces-Round-829-Div-2.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"CF1754B.Kevin and Permutation","uid":"7c8267ca3bcbb0a1983078a7d4c8df82","slug":"CF1754B.Kevin and Permutation","date":"2022-11-04T16:00:00.000Z","updated":"2022-11-04T16:00:00.000Z","comments":true,"path":"api/articles/CF1754B.Kevin and Permutation.json","keywords":"notes","cover":null,"text":"原题链接CF1754B 题目大意：总共有t组数据，每组数据给出一个n，输出一个从1到n的排列，使得min(|pi+1-pi|)最大。即：找出使任意两个数的差值的最小值最大的一个排列，如果有多种答案，输出一种即可。数据范围：1 &lt;&#x3D; t &lt;&#x3D; 100...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"题记/Codeforces/Codeforces-Round-829-Div-2","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-829-Div-2/D800/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#829 (Div.2)","slug":"Codeforces-Round-829-Div-2","count":2,"path":"api/tags/Codeforces-Round-829-Div-2.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"洛谷P3853[TJOI2007]路标设置","uid":"241d076c874b2badab1c87882a2d2fef","slug":"洛谷P3853[TJOI2007]路标设置","date":"2022-11-03T16:00:00.000Z","updated":"2022-11-03T16:00:00.000Z","comments":true,"path":"api/articles/洛谷P3853[TJOI2007]路标设置.json","keywords":"notes","cover":null,"text":"原题链接LuoguP3853用到的知识：整数二分 题目大意：在一段长 L 的公路上某些地方设有 N 个路标（保证起点终点开始时都有路标），它们的位置是与起点的距离表示，但是有人还是嫌少，所以又要添加 K 个路标，路标可以添加到任意位置。涉及的所有数据全部都为整数，2 &lt;&#...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":17,"path":"api/categories/题记.json"},{"name":"洛谷","slug":"题记/洛谷","count":4,"path":"api/categories/题记/洛谷.json"},{"name":"洛谷绿题","slug":"题记/洛谷/洛谷绿题","count":2,"path":"api/categories/题记/洛谷/洛谷绿题.json"},{"name":"二分查找","slug":"题记/洛谷/洛谷绿题/二分查找","count":1,"path":"api/categories/题记/洛谷/洛谷绿题/二分查找.json"}],"tags":[{"name":"题记","slug":"题记","count":17,"path":"api/tags/题记.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"},{"name":"洛谷","slug":"洛谷","count":4,"path":"api/tags/洛谷.json"},{"name":"洛谷绿题","slug":"洛谷绿题","count":2,"path":"api/tags/洛谷绿题.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"前缀和","uid":"7e125c2fcf5388ca1ef0a457d9c6ee91","slug":"前缀和","date":"2022-11-02T16:00:00.000Z","updated":"2022-11-02T16:00:00.000Z","comments":true,"path":"api/articles/前缀和.json","keywords":"notes","cover":null,"text":"前缀和可以将区间和优化成O(1)，即对于区间内的值之和，变成一个公式的计算，如一位前缀和对于[a,b]区间求和转化为S[b] - S[a - 1]. 一维前缀和板子：S[i] &#x3D; a[1] + a[2] + ... a[i] &#x2F;&#x2F;预处理 a[l] +...","link":"","photos":[],"count_time":{"symbolsCount":434,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"前缀和","slug":"算法模板/前缀和","count":1,"path":"api/categories/算法模板/前缀和.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"前缀和","slug":"前缀和","count":1,"path":"api/tags/前缀和.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"高精度加法","uid":"feb3f716faa59646e6cdce3816112649","slug":"高精度加法","date":"2022-11-02T16:00:00.000Z","updated":"2022-11-02T16:00:00.000Z","comments":true,"path":"api/articles/高精度加法.json","keywords":"notes","cover":null,"text":"当计算的数据大于最大的容器，则需要手写高精度加法。 板子如下：&#x2F;&#x2F; C &#x3D; A + B, A &gt;&#x3D; 0, B &gt;&#x3D; 0 vector&lt;int&gt; add(vector&lt;int&gt; &amp;A, v...","link":"","photos":[],"count_time":{"symbolsCount":557,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"高精度模板","slug":"算法模板/高精度模板","count":4,"path":"api/categories/算法模板/高精度模板.json"},{"name":"高精度加法","slug":"算法模板/高精度模板/高精度加法","count":1,"path":"api/categories/算法模板/高精度模板/高精度加法.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"高精度模板","slug":"高精度模板","count":4,"path":"api/tags/高精度模板.json"},{"name":"高精度加法","slug":"高精度加法","count":1,"path":"api/tags/高精度加法.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"高精度乘法","uid":"d516ffba6431f809e15e274d7a5146cc","slug":"高精度乘法","date":"2022-11-02T16:00:00.000Z","updated":"2022-11-02T16:00:00.000Z","comments":true,"path":"api/articles/高精度乘法.json","keywords":"notes","cover":null,"text":"一般只用到一个高精度乘一个小数。 板子如下：&#x2F;&#x2F; C &#x3D; A * b, A &gt;&#x3D; 0, b &gt;&#x3D; 0 vector&lt;int&gt; mul(vector&lt;int&gt; &amp;A, int b) &#1...","link":"","photos":[],"count_time":{"symbolsCount":470,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"高精度模板","slug":"算法模板/高精度模板","count":4,"path":"api/categories/算法模板/高精度模板.json"},{"name":"高精度乘法","slug":"算法模板/高精度模板/高精度乘法","count":1,"path":"api/categories/算法模板/高精度模板/高精度乘法.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"高精度模板","slug":"高精度模板","count":4,"path":"api/tags/高精度模板.json"},{"name":"高精度乘法","slug":"高精度乘法","count":1,"path":"api/tags/高精度乘法.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"高精度减法","uid":"17d279e898f5a808206279d482f69cd8","slug":"高精度减法","date":"2022-11-02T16:00:00.000Z","updated":"2022-11-02T16:00:00.000Z","comments":true,"path":"api/articles/高精度减法.json","keywords":"notes","cover":null,"text":"板子如下：&#x2F;&#x2F; C &#x3D; A - B, 满足A &gt;&#x3D; B, A &gt;&#x3D; 0, B &gt;&#x3D; 0 vector&lt;int&gt; sub(vector&lt;int&gt; &amp;A, vector&lt...","link":"","photos":[],"count_time":{"symbolsCount":537,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"高精度模板","slug":"算法模板/高精度模板","count":4,"path":"api/categories/算法模板/高精度模板.json"},{"name":"高精度减法","slug":"算法模板/高精度模板/高精度减法","count":1,"path":"api/categories/算法模板/高精度模板/高精度减法.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"高精度模板","slug":"高精度模板","count":4,"path":"api/tags/高精度模板.json"},{"name":"高精度减法","slug":"高精度减法","count":1,"path":"api/tags/高精度减法.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"高精度除法","uid":"82f48f9fee67ca6334cb02910bc05e80","slug":"高精度除法","date":"2022-11-02T16:00:00.000Z","updated":"2022-11-02T16:00:00.000Z","comments":true,"path":"api/articles/高精度除法.json","keywords":"notes","cover":null,"text":"主要还是用整除得商和余，得一定位数小数目前没有见到做题用到，就先跳过了。 板子如下：&#x2F;&#x2F; A &#x2F; b &#x3D; C ... r, A &gt;&#x3D; 0, b &gt; 0 vector&lt;int&gt; div(vector&lt;i...","link":"","photos":[],"count_time":{"symbolsCount":519,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"高精度模板","slug":"算法模板/高精度模板","count":4,"path":"api/categories/算法模板/高精度模板.json"},{"name":"高精度除法","slug":"算法模板/高精度模板/高精度除法","count":1,"path":"api/categories/算法模板/高精度模板/高精度除法.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"高精度模板","slug":"高精度模板","count":4,"path":"api/tags/高精度模板.json"},{"name":"高精度除法","slug":"高精度除法","count":1,"path":"api/tags/高精度除法.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"堆排序","uid":"5689f65fc84adf6e03dbdcbe8815a58b","slug":"堆排序","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/堆排序.json","keywords":"notes","cover":null,"text":"重点在于模拟堆的up和down操作，但是在C++中优先队列priority_queue默认是大根堆，这个板子所以写的也会非常少。 板子如下：void down(int u)&#123; int t &#x3D; u; if (u * 2 &lt;&#x3D; siz &amp;&...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"排序模板","slug":"算法模板/排序模板","count":3,"path":"api/categories/算法模板/排序模板.json"},{"name":"堆排序","slug":"算法模板/排序模板/堆排序","count":1,"path":"api/categories/算法模板/排序模板/堆排序.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"排序模板","slug":"排序模板","count":3,"path":"api/tags/排序模板.json"},{"name":"堆排序","slug":"堆排序","count":1,"path":"api/tags/堆排序.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"快速排序","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/快速排序.json","keywords":"notes","cover":null,"text":"虽然C++中sort的耗时与快排几乎一样，但是快排仍然需要我们去了解，板子也是要记住的，以便应对不能用sort排序，或是sort会耗时更大的情况。 板子如下：void quick_sort(int q[], int l, int r) &#123; if (l &gt;&#x3D...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"排序模板","slug":"算法模板/排序模板","count":3,"path":"api/categories/算法模板/排序模板.json"},{"name":"快速排序","slug":"算法模板/排序模板/快速排序","count":1,"path":"api/categories/算法模板/排序模板/快速排序.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"排序模板","slug":"排序模板","count":3,"path":"api/tags/排序模板.json"},{"name":"快速排序","slug":"快速排序","count":1,"path":"api/tags/快速排序.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"整数二分","uid":"f463b7e04b9afca016a6c3b848f9e77c","slug":"整数二分","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/整数二分.json","keywords":"notes","cover":null,"text":"对于贪心，某些题会出现WA，比方说逐步贪心的时候每次取出最大值除二，会使最小值偏大如洛谷P3853，则需要用二分去搜索答案。 板子如下：bool check(int x) &#123;&#x2F;* ... *&#x2F;&#125; &#x2F;&#x2F; 检查x是否满足某种...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"二分模板","slug":"算法模板/二分模板","count":2,"path":"api/categories/算法模板/二分模板.json"},{"name":"整数二分","slug":"算法模板/二分模板/整数二分","count":1,"path":"api/categories/算法模板/二分模板/整数二分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"二分模板","slug":"二分模板","count":2,"path":"api/tags/二分模板.json"},{"name":"整数二分","slug":"整数二分","count":1,"path":"api/tags/整数二分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"归并排序","uid":"c668d79bcd807cc57a11ce29c7e08a39","slug":"归并排序","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/归并排序.json","keywords":"notes","cover":null,"text":"归并排序的速度一般都小于sort函数，一般用的很少，但该学还得学啊。 板子如下：void merge_sort(int q[], int l, int r) &#123; if (l &gt;&#x3D; r) return; int mid &#x3D; l + r &gt;&...","link":"","photos":[],"count_time":{"symbolsCount":716,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"排序模板","slug":"算法模板/排序模板","count":3,"path":"api/categories/算法模板/排序模板.json"},{"name":"归并排序","slug":"算法模板/排序模板/归并排序","count":1,"path":"api/categories/算法模板/排序模板/归并排序.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"排序模板","slug":"排序模板","count":3,"path":"api/tags/排序模板.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"浮点二分","uid":"95868cb257f78c07f576c8cba24d1e61","slug":"浮点二分","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/浮点二分.json","keywords":"notes","cover":null,"text":"就是二分逼近答案，比方说二分法求零点。 板子如下：bool check(double x) &#123;&#x2F;* ... *&#x2F;&#125; &#x2F;&#x2F; 检查x是否满足某种性质 double bsearch_3(double l, double r) ...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"二分模板","slug":"算法模板/二分模板","count":2,"path":"api/categories/算法模板/二分模板.json"},{"name":"浮点二分","slug":"算法模板/二分模板/浮点二分","count":1,"path":"api/categories/算法模板/二分模板/浮点二分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"二分模板","slug":"二分模板","count":2,"path":"api/tags/二分模板.json"},{"name":"浮点二分","slug":"浮点二分","count":1,"path":"api/tags/浮点二分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}],"categories":53,"tags":132,"word_count":"39k","post_count":36}