{"title":"差分","uid":"5996424ecd7fa41d224f56f7fc47f943","slug":"差分","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/差分.json","keywords":"notes","cover":null,"content":"<p>差分用于大量的数组中部分数据的加减操作，不必再遍历部分区间进行加减，而是通过对部分位置的操作即可完成对区间所有元素的加减，最后再累加即可得到每个元素的值。</p>\n<h3 id=\"一维差分板子：\"><a href=\"#一维差分板子：\" class=\"headerlink\" title=\"一维差分板子：\"></a>一维差分板子：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;给区间[l, r]中的每个数加上c：\nB[l] +&#x3D; c, B[r + 1] -&#x3D; c\n&#x2F;&#x2F;初始化相当于在[i, i]插入一个值 </code></pre>\n\n<h3 id=\"二维差分板子：\"><a href=\"#二维差分板子：\" class=\"headerlink\" title=\"二维差分板子：\"></a>二维差分板子：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">&#x2F;&#x2F;a[i][j]是第i行j列格子左上部分所有元素的和\n&#x2F;&#x2F;给以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵中的所有元素加上c：\nS[x1, y1] +&#x3D; c, S[x2 + 1, y1] -&#x3D; c, S[x1, y2 + 1] -&#x3D; c, S[x2 + 1, y2 + 1] +&#x3D; c\n&#x2F;&#x2F;初始化相当于在x1&#x3D;i,x2&#x3D;i,y1&#x3D;j,y2&#x3D;j处插入一个值</code></pre>","feature":false,"text":"差分用于大量的数组中部分数据的加减操作，不必再遍历部分区间进行加减，而是通过对部分位置的操作即可完成对区间所有元素的加减，最后再累加即可得到每个元素的值。 一维差分板子：&#x2F;&#x2F;给区间[l, r]中的每个数加上c： B[l] +&#x3D; c, B[r + 1]...","link":"","photos":[],"count_time":{"symbolsCount":446,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"差分","slug":"算法模板/差分","count":1,"path":"api/categories/算法模板/差分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"差分","slug":"差分","count":3,"path":"api/tags/差分.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E5%B7%AE%E5%88%86%E6%9D%BF%E5%AD%90%EF%BC%9A\"><span class=\"toc-text\">一维差分板子：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E5%B7%AE%E5%88%86%E6%9D%BF%E5%AD%90%EF%BC%9A\"><span class=\"toc-text\">二维差分板子：</span></a></li></ol>","author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"区间合并","uid":"e2877b7fa24b8c65939a980db8467f26","slug":"区间合并","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/区间合并.json","keywords":"notes","cover":null,"text":"非常好理解的板子，用的也非常少，就是把区间合并。 板子如下：&#x2F;&#x2F; 将所有存在交集的区间合并 typedef pair&lt;int, int&gt; PII; void merge(vector&lt;PII&gt; &amp;segs) &#123; vec...","link":"","photos":[],"count_time":{"symbolsCount":634,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"区间合并","slug":"算法模板/区间合并","count":1,"path":"api/categories/算法模板/区间合并.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"区间合并","slug":"区间合并","count":1,"path":"api/tags/区间合并.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"栈","uid":"79d3d24c6264cf3d036dbffe252e1981","slug":"栈","date":"2022-11-06T16:00:00.000Z","updated":"2022-11-06T16:00:00.000Z","comments":true,"path":"api/articles/栈.json","keywords":"notes","cover":null,"text":"栈：&#x2F;&#x2F; tt表示栈顶 int stk[N], tt &#x3D; 0; &#x2F;&#x2F; 向栈顶插入一个数 stk[ ++ tt] &#x3D; x; &#x2F;&#x2F; 从栈顶弹出一个数 tt -- ; &#x2F;&#x2F; 栈顶的值 s...","link":"","photos":[],"count_time":{"symbolsCount":202,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"栈","slug":"算法模板/数据结构/栈","count":1,"path":"api/categories/算法模板/数据结构/栈.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"栈","slug":"栈","count":1,"path":"api/tags/栈.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}