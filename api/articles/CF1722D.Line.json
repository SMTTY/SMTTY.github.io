{"title":"CF1722D.Line","uid":"b6f2c460c174967b06c32707c0b7231a","slug":"CF1722D.Line","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1722D.Line.json","keywords":"notes","cover":"/images/cf.png","content":"<h3 id=\"原题链接：\"><a href=\"#原题链接：\" class=\"headerlink\" title=\"原题链接：\"></a>原题链接：</h3><p><a href=\"https://codeforces.com/problemset/problem/1722/D\">CF1722D</a></p>\n<h3 id=\"题目大意：\"><a href=\"#题目大意：\" class=\"headerlink\" title=\"题目大意：\"></a>题目大意：</h3><p>有n个人站在一条水平线上，每个人要么向左看，要么向右看，每个人都数着他们所看向的方向上能看到多少人，他们看到的人数之和记为每个人的计数之和；比方说，队列LRRLL中，L表示该位置的人向左看，R表示向右看，那么这个队列每个人的计数为[0, 3, 2, 3, 4]，每个人的计数之和为12.<br>现在我们知道一个队列的初步安排，对于从1到n每次递增1的k，每次最多改变k个人的方向；确保每次改变k个人方向后。计数之和尽可能大，并输出每次的最大值，用空格间隔开。<br>共给出t组数据，每组数据第一行给出一个n表示队列人数，下一行有一个由LR组成的长度为n的字符串，表示队列的初步安排。<br>数据范围：1 ≤ t ≤ 100，1 ≤ n ≤ 2* 10<sup>5</sup>，Σn ≤ 2*10<sup>5</sup>，对于答案需要64bit容器，如C++的long long。</p>\n<h3 id=\"分析思路：\"><a href=\"#分析思路：\" class=\"headerlink\" title=\"分析思路：\"></a>分析思路：</h3><p>观察发现，如果改变一个人的朝向，会使计数之和产生一个变化，可能为正，也可能为负；又因为队伍的长度我们是提前知道的，也就是说在知道第i个人朝向时，我们可以计算出如果令这个人转头对计数之和的影响，当然我们只记录增加的影响，因为需要输出最大值，为了简化后续循环，如果转头会使计数之和减少，那么我们不会让这个人转头，记录为0即可；然后对这些记录进行排序，之后进行一次从大到小遍历，使当前计数之和加上影响，然后输出。</p>\n<h3 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;vector&gt;\nusing namespace std;\n\n\nvoid quick_sort(vector&lt;int&gt; &amp;q, int l, int r)\n&#123;\n    if (l &gt;&#x3D; r) return;\n\n\n    int i &#x3D; l - 1, j &#x3D; r + 1, x &#x3D; q[(l + r) &#x2F; 2];\n    while (i &lt; j)\n    &#123;\n        do i ++ ; while (q[i] &lt; x);\n        do j -- ; while (q[j] &gt; x);\n        if (i &lt; j) swap(q[i], q[j]);\n    &#125;\n    quick_sort(q, l, j), quick_sort(q, j + 1, r);\n&#125;\n\n\nint main()&#123;\n    int t;\n    cin &gt;&gt; t;\n    for (int tt &#x3D; 0; tt &lt; t; tt ++ )&#123;\n        int n;\n        long long x &#x3D; 0;\n        char c;\n        cin &gt;&gt; n;\n        vector&lt;int&gt; p;\n        for (int i &#x3D; 1; i &lt;&#x3D; n; i ++ )&#123;\n            cin &gt;&gt; c;\n            if(c &#x3D;&#x3D; &#39;R&#39;)&#123;\n                p.push_back(max(i - 1 - (n - i), 0));\n                x +&#x3D; n - i;\n            &#125;\n            else&#123;\n                p.push_back(max(n - i - (i - 1), 0));\n                x +&#x3D; i - 1;\n            &#125;\n        &#125;\n        quick_sort(p, 0, n - 1);\n        for (int i &#x3D; p.size() - 1; i &gt;&#x3D; 0; i -- )&#123;\n            x +&#x3D; p[i];\n            cout &lt;&lt; x &lt;&lt; &quot; &quot;;\n        &#125;\n        cout &lt;&lt; endl;\n        p.clear();\n    &#125;\n&#125;</code></pre>","feature":false,"text":"原题链接：CF1722D 题目大意：有n个人站在一条水平线上，每个人要么向左看，要么向右看，每个人都数着他们所看向的方向上能看到多少人，他们看到的人数之和记为每个人的计数之和；比方说，队列LRRLL中，L表示该位置的人向左看，R表示向右看，那么这个队列每个人的计数为[0, 3, ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":23,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1100/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":23,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1100","slug":"D1100","count":2,"path":"api/tags/D1100.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E9%A2%98%E9%93%BE%E6%8E%A5%EF%BC%9A\"><span class=\"toc-text\">原题链接：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">题目大意：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">分析思路：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">代码如下：</span></a></li></ol>","author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Trie树","uid":"93f431eb174c74436b204f9604320531","slug":"Trie树","date":"2022-11-09T16:00:00.000Z","updated":"2022-11-09T16:00:00.000Z","comments":true,"path":"api/articles/Trie树.json","keywords":"notes","cover":null,"text":"一种以树状结构储存字符串的方法。 板子如下：int son[N][26], cnt[N], idx; &#x2F;&#x2F; 0号点既是根节点，又是空节点 &#x2F;&#x2F; son[][]存储树中每个节点的子节点 &#x2F;&#x2F; cnt[]存储以每个节点结尾的...","link":"","photos":[],"count_time":{"symbolsCount":696,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"数据结构","slug":"算法模板/数据结构","count":4,"path":"api/categories/算法模板/数据结构.json"},{"name":"Trie树","slug":"算法模板/数据结构/Trie树","count":1,"path":"api/categories/算法模板/数据结构/Trie树.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"数据结构","slug":"数据结构","count":4,"path":"api/tags/数据结构.json"},{"name":"Trie树","slug":"Trie树","count":1,"path":"api/tags/Trie树.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"CF1742E.Scuza","uid":"4cbd9d4467c43b05e611447308ee64f8","slug":"CF1742E.Scuza","date":"2022-11-08T16:00:00.000Z","updated":"2022-11-08T16:00:00.000Z","comments":true,"path":"api/articles/CF1742E.Scuza.json","keywords":"notes","cover":"/images/cf.png","text":"原题链接：CF1742E 题目大意：有这么一段楼梯，总共有n级台阶，设地面高度是0，每段楼梯距离前一级楼梯(或者地面)有一定高度ai，总共有q个问题，每个问题给出一个人所能跨上的最高距离，我们需要计算出这个人最高能上升的高度。共给出t组数据，每组数据第一行给出n，q表示台阶数和问...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":23,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":16,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"题记/Codeforces/Codeforces-Round-827-Div-4","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心.json"},{"name":"二分查找","slug":"题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-827-Div-4/D1200/贪心/二分查找.json"}],"tags":[{"name":"题记","slug":"题记","count":23,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":16,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"Codeforces Round#827 (Div. 4)","slug":"Codeforces-Round-827-Div-4","count":2,"path":"api/tags/Codeforces-Round-827-Div-4.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"二分查找","slug":"二分查找","count":1,"path":"api/tags/二分查找.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}