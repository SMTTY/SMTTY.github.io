{"title":"A.Stop,Yesterday Please No More","uid":"6827607d91c5cebab39a29fcef8a39d5","slug":"2022icpcnanjingA.Stop,Yesterday Please No More","date":"2023-02-07T12:17:27.978Z","updated":"2023-02-14T15:40:53.450Z","comments":true,"path":"api/articles/2022icpcnanjingA.Stop,Yesterday Please No More.json","keywords":"notes","cover":"/images/icpc.png","content":"<h3 id=\"链接：\"><a href=\"#链接：\" class=\"headerlink\" title=\"链接：\"></a>链接：</h3><p><a href=\"https://codeforces.com/gym/104128/submit\">测试链接</a><br><a href=\"https://codeforces.com/gym/104128/attachments/download/18620/contest-zh.pdf\">中文题面在这里面找</a></p>\n<h3 id=\"题目大意：\"><a href=\"#题目大意：\" class=\"headerlink\" title=\"题目大意：\"></a>题目大意：</h3><p>给定一张n行m列的网格，在位于i<sub>h</sub>行j<sub>h</sub>列的格子上有且仅有一个洞，其他每个格子上都是空地且都有一只袋鼠。全部袋鼠被U,D,L,R控制，所有袋鼠会同时根据按下的按键移动，对于一只位于第i行j列的格子上的袋鼠(用(i, j)表示)：</p>\n<ol>\n<li>U：它会移动到(i - 1, j)；</li>\n<li>D：它会移动到(i + 1, j)；</li>\n<li>L：它会移动到(i, j - 1)；</li>\n<li>R：它会移动到(i, j + 1)。</li>\n</ol>\n<p>如果一只袋鼠踩到了洞或者移动到了网格外面，它将被从网格移除。<br>给出网格n*m，一个整数k，以及一系列操作(由’U’,’D’,’L’,’R’组成)；问网格中可能存在洞的位置有多少个，使得一系列操作后，网格内恰有k只袋鼠存留。<br>数据范围：第一行三个整数n,m,k：1 ≤ n,m ≤ 10<sup>3</sup>，0 ≤ k &lt; n * m;<br>第二行一个字符串表示一系列操作，且长度≤10<sup>6</sup>。</p>\n<h3 id=\"分析思路：\"><a href=\"#分析思路：\" class=\"headerlink\" title=\"分析思路：\"></a>分析思路：</h3><p>题非常简单，首先考虑到，如果洞不存在，那么一系列操作进行后，如果袋鼠还有剩余一定是一个矩阵；为了确定剩余袋鼠的矩阵，我们对上下左右四个(UDLR)边界分别设置一个临时变量，每次操作后，对左上边界与临时变量取max值，对右下取min值即可确定剩余矩阵的边界，在这个过程中，以L操作为例，L操作后袋鼠整体向左移，相对而言就是边界向右移，此时应该是左右边界的临时值分别++；确定完剩余的袋鼠之后，我们需要判断一下上下以及左右边界是否合法（如果上边界&lt;下边界，或左边界&gt;有边界，则说明没有剩余袋鼠），此时结合k值进行讨论，如果k&#x3D;0，场上任意位置均可以有洞，输出n * m，如果k≠0，则说明哪个位置存在洞都不能满足剩余k只袋鼠的条件，因为他们都出网格了，输出0。<br>上面特殊情况考虑完之后，我们轻松的得到，没有出网格的袋鼠数量为x &#x3D; (D - U + 1) * (R - L + 1)，因为最终要剩余k只袋鼠，那么将有(x - k)只袋鼠应当掉入洞中，则我们需要统计每个格子有多少只不同的袋鼠经过过，最终记录值(x - k)的格子数量；对于这个操作我们很容易就想到二维差分，我们通过模拟剩余的袋鼠的矩阵，每次将这个矩阵范围的格子++（记得初始矩阵也要统计），由于矩阵的大小已经是唯一确定的了，我们只需要开一个二维布尔数组统计左上(或右下)是否已经计过数，就可以很轻松的判重了，最后再用二维前缀和统计出答案输出即可。<br>这个题应该很容易A掉吧…</p>\n<h3 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstring&gt;\nusing namespace std;\n\n#define endl &#39;\\n&#39;\n\nconst int N &#x3D; 1010;\n\nstring op;\n\nint n, m, k;\nint U, D, L, R, U_, D_, L_, R_;\nbool st[N][N];\nint g[N][N];\n\nvoid add(int x1, int y1, int x2, int y2)&#123;\n    if (st[x1][y1])\n        return;\n    st[x1][y1] &#x3D; true;\n    g[x1][y1]++, g[x2 + 1][y1]--, g[x1][y2 + 1]--, g[x2 + 1][y2 + 1]++;\n&#125;\n\nvoid solve()&#123;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; op;\n    U_ &#x3D; L_ &#x3D; U &#x3D; L &#x3D; 1, R_ &#x3D; R &#x3D; m, D_ &#x3D; D &#x3D; n;\n    memset(st, false, sizeof st), memset(g, 0, sizeof g);\n    &#x2F;&#x2F;确定边界\n    for (auto i: op)&#123;\n        if (i &#x3D;&#x3D; &#39;L&#39;)\n            L_++, R_++;\n        else if (i &#x3D;&#x3D; &#39;R&#39;)\n            L_--, R_--;\n        else if (i &#x3D;&#x3D; &#39;U&#39;)\n            U_++, D_++;\n        else\n            U_--, D_--;\n        L &#x3D; max(L, L_), R &#x3D; min(R, R_), U &#x3D; max(U, U_), D &#x3D; min(D, D_);\n    &#125;\n    &#x2F;&#x2F;无袋鼠剩余情况\n    if (U &gt; D || L &gt; R)&#123;\n        if (k)\n            puts(&quot;0&quot;);\n        else\n            cout &lt;&lt; n * m &lt;&lt; endl;\n        return;\n    &#125;\n    &#x2F;&#x2F;统计袋鼠经过格子的情况\n    int x &#x3D; (D - U + 1) * (R - L + 1), cnt &#x3D; 0;\n    add(U, L, D, R);\n    for (auto i: op)&#123;\n        if (i &#x3D;&#x3D; &#39;L&#39;)\n            L--, R--;\n        else if (i &#x3D;&#x3D; &#39;R&#39;)\n            L++, R++;\n        else if (i &#x3D;&#x3D; &#39;U&#39;)\n            U--, D--;\n        else\n            U++, D++;\n        add(U, L, D, R);\n    &#125;\n    &#x2F;&#x2F;二位前缀和+统计答案\n    for (int i &#x3D; 1; i &lt;&#x3D; n; i ++ )\n        for (int j &#x3D; 1; j &lt;&#x3D; m; j ++ )\n            g[i][j] +&#x3D; g[i - 1][j] + g[i][j - 1] - g[i - 1][j - 1];\n\n    for (int i &#x3D; 1; i &lt;&#x3D; n; i ++ )\n        for (int j &#x3D; 1; j &lt;&#x3D; m; j ++ )\n            if (x - g[i][j] &#x3D;&#x3D; k)\n                 cnt++;\n    cout &lt;&lt; cnt &lt;&lt; endl;\n&#125;\n\nint main()&#123;\n    int _;\n    cin &gt;&gt; _;\n    while (_ -- )\n        solve();\n&#125;</code></pre>","feature":false,"text":"链接：测试链接中文题面在这里面找 题目大意：给定一张n行m列的网格，在位于ih行jh列的格子上有且仅有一个洞，其他每个格子上都是空地且都有一只袋鼠。全部袋鼠被U,D,L,R控制，所有袋鼠会同时根据按下的按键移动，对于一只位于第i行j列的格子上的袋鼠(用(i, j)表示)： U：它...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"题记","slug":"题记","count":23,"path":"api/categories/题记.json"},{"name":"icpc","slug":"题记/icpc","count":2,"path":"api/categories/题记/icpc.json"},{"name":"The 2022 ICPC Asia Nanjing Regional Contest","slug":"题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest","count":2,"path":"api/categories/题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest.json"},{"name":"差分","slug":"题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分","count":2,"path":"api/categories/题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分.json"}],"tags":[{"name":"题记","slug":"题记","count":23,"path":"api/tags/题记.json"},{"name":"icpc","slug":"icpc","count":2,"path":"api/tags/icpc.json"},{"name":"The 2022 ICPC Asia Nanjing Regional Contest","slug":"The-2022-ICPC-Asia-Nanjing-Regional-Contest","count":2,"path":"api/tags/The-2022-ICPC-Asia-Nanjing-Regional-Contest.json"},{"name":"差分","slug":"差分","count":3,"path":"api/tags/差分.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E6%8E%A5%EF%BC%9A\"><span class=\"toc-text\">链接：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">题目大意：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">分析思路：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">代码如下：</span></a></li></ol>","author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"线段树整理","uid":"e0aa9ca13b84c518e471c68dfb7b2c45","slug":"线段树整理","date":"2023-01-01T16:00:00.000Z","updated":"2023-01-01T16:00:00.000Z","comments":true,"path":"api/articles/线段树整理.json","keywords":"notes","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"整理","slug":"整理","count":1,"path":"api/categories/整理.json"},{"name":"线段树","slug":"整理/线段树","count":1,"path":"api/categories/整理/线段树.json"}],"tags":[{"name":"线段树","slug":"线段树","count":5,"path":"api/tags/线段树.json"},{"name":"整理","slug":"整理","count":1,"path":"api/tags/整理.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"D.Chat Program","uid":"8b78cc765c53e033e18243f7d6ac7be7","slug":"2022icpcnanjingD.Chat Program","date":"2023-01-27T10:44:57.940Z","updated":"2023-01-31T10:23:18.216Z","comments":true,"path":"api/articles/2022icpcnanjingD.Chat Program.json","keywords":"notes","cover":"/images/icpc.png","text":"链接：测试链接中文题面在这里面找 题目大意：题面很长，说人话就是，给一个长n的序列a，另外给出k,m,c,d四个整数，我们可以选择序列中的一个位置p(1 ≤ p ≤ n - m + 1)，并对于所有0 ≤ i &lt; m，将ap+i增加(c + di)，求至多进行一次操作后，序...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":23,"path":"api/categories/题记.json"},{"name":"icpc","slug":"题记/icpc","count":2,"path":"api/categories/题记/icpc.json"},{"name":"The 2022 ICPC Asia Nanjing Regional Contest","slug":"题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest","count":2,"path":"api/categories/题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest.json"},{"name":"差分","slug":"题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分","count":2,"path":"api/categories/题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分.json"},{"name":"二分答案","slug":"题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分/二分答案","count":1,"path":"api/categories/题记/icpc/The-2022-ICPC-Asia-Nanjing-Regional-Contest/差分/二分答案.json"}],"tags":[{"name":"题记","slug":"题记","count":23,"path":"api/tags/题记.json"},{"name":"icpc","slug":"icpc","count":2,"path":"api/tags/icpc.json"},{"name":"The 2022 ICPC Asia Nanjing Regional Contest","slug":"The-2022-ICPC-Asia-Nanjing-Regional-Contest","count":2,"path":"api/tags/The-2022-ICPC-Asia-Nanjing-Regional-Contest.json"},{"name":"差分","slug":"差分","count":3,"path":"api/tags/差分.json"},{"name":"二分答案","slug":"二分答案","count":2,"path":"api/tags/二分答案.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}