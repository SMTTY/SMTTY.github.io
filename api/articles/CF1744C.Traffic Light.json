{"title":"CF1744C.Traffic Light","uid":"5329850074d4a4358b32a48b44c0c487","slug":"CF1744C.Traffic Light","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744C.Traffic Light.json","keywords":"notes","cover":null,"content":"<p>原题链接<a href=\"https://codeforces.com/contest/1744/problem/C\">CF1744C</a></p>\n<h3 id=\"题目大意：\"><a href=\"#题目大意：\" class=\"headerlink\" title=\"题目大意：\"></a>题目大意：</h3><p>有那么有一个有大病的交通信号灯，它会按一个规律一直循环闪烁(依然还是RYG三色，且还是只有绿灯可以通行)，这个规律用一个字符串描述，如rggry，那么它的闪烁就是rggryrggry…循环往复，可以知道现在的红绿灯时什么颜色，但是不知道现在的时间，需要找出保证过马路的最短时间。<br>总共有t组数据，每组数据给出一个n表示红绿灯的最小循环的长度，然后一个字符c表示现在红绿灯的颜色，下一行给出长度为n的字符串，描述红绿灯的循环。<br>数据范围：1 &lt;&#x3D; t &lt;&#x3D; 10<sup>4</sup>，1 &lt;&#x3D; n &lt;&#x3D; 2*10<sup>5</sup>，c∈{r, y, g}。</p>\n<h3 id=\"分析思路：\"><a href=\"#分析思路：\" class=\"headerlink\" title=\"分析思路：\"></a>分析思路：</h3><p>题面非常具有迷惑性，虽然是最短时间，但是要的是保证过马路的最短时间，也就是最短时间限制的是看到g就过马路，而保证过马路的最短时间就是在c之后看到g的最大时间间隔；如果是c &#x3D; ‘g’，那么可以直接过，输出0即可，而如果c是r或者y，我们则需要搜寻在其右侧出现的第一个g的距离，最后比较求出最大值(因为是循环闪烁，所以我们可以使S延长一倍，从而达到模拟循环的效果)。<br>为了避免超时，我们需要做出一些优化：当c ≠ ‘g’时，c与其右端第一个g之间的c都可以跳过判断，因为其长度一定小于当前判断的长度。</p>\n<h3 id=\"代码如下：\"><a href=\"#代码如下：\" class=\"headerlink\" title=\"代码如下：\"></a>代码如下：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">#include&lt;iostream&gt;\n#include&lt;cstring&gt;\nusing namespace std;\n\nint main()&#123;\n    int _;\n    cin &gt;&gt; _;\n    while (_ -- )&#123;\n        int n, ans &#x3D; 0, j;\n        char c;\n        string s;\n        cin &gt;&gt; n &gt;&gt; c &gt;&gt; s;\n        if (c &#x3D;&#x3D; &#39;g&#39;)&#123;\n            puts(&quot;0&quot;);\n            continue;\n        &#125;\n        s +&#x3D; s;\n        for (int i &#x3D; 0; i &lt; n; i ++ )&#123;\n            if (c &#x3D;&#x3D; s[i])&#123;\n                for (j &#x3D; i + 1;; j ++ )\n                    if (s[j] &#x3D;&#x3D; &#39;g&#39;)\n                        break;\n            &#125;\n            else\n                continue;\n            ans &#x3D; max(ans, j - i);\n            i &#x3D; j;&#x2F;&#x2F;省略中间部分出现的c\n        &#125;\n        cout &lt;&lt; ans &lt;&lt; endl;\n    &#125;\n&#125;</code></pre>","text":"原题链接CF1744C 题目大意：有那么有一个有大病的交通信号灯，它会按一个规律一直循环闪烁(依然还是RYG三色，且还是只有绿灯可以通行)，这个规律用一个字符串描述，如rggry，那么它的闪烁就是rggryrggry…循环往复，可以知道现在的红绿灯时什么颜色，但是不知道现在的时间...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1000","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000.json"},{"name":"双指针","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1000/双指针.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"D1000","slug":"D1000","count":3,"path":"api/tags/D1000.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"},{"name":"双指针","slug":"双指针","count":1,"path":"api/tags/双指针.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E5%A4%A7%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">题目大意：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">分析思路：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">代码如下：</span></a></li></ol>","author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CF1716B.Permutation Chain","uid":"235723fad9e0f351ec569d7c8ca68497","slug":"CF1716B.Permutation Chain","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1716B.Permutation Chain.json","keywords":"notes","cover":null,"text":"原题链接CF1716B 题目大意：定义第i个数刚好是i的点为不动点，一个排列的不动性是其中不动点的数量；给出t组数据；在每组数据中，给出一个n，我们需要构造尽可能多的序列，使其不动性依次严格递减。每组数据输出最多的序列数k，然后接下来k行输出这些排列(答案有很多种，满足题意即可)...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800.json"},{"name":"数学","slug":"题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学","count":1,"path":"api/categories/题记/Codeforces/Educational-Codeforces-Round-133-Rated-for-Div-2/D800/数学.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"Educational Codeforces Round 133 (Rated for Div. 2)","slug":"Educational-Codeforces-Round-133-Rated-for-Div-2","count":1,"path":"api/tags/Educational-Codeforces-Round-133-Rated-for-Div-2.json"},{"name":"D800","slug":"D800","count":4,"path":"api/tags/D800.json"},{"name":"数学","slug":"数学","count":1,"path":"api/tags/数学.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CF1744D.Divisibility by 2^n","uid":"f43c88fb6011bc7c9f20123aabe01edd","slug":"CF1744D.Divisibility by 2^n","date":"2022-11-07T16:00:00.000Z","updated":"2022-11-07T16:00:00.000Z","comments":true,"path":"api/articles/CF1744D.Divisibility by 2^n.json","keywords":"notes","cover":null,"text":"原题链接CF1744D 题目大意：共有t组数据，每组数据给出一个n，然后在下一行中给出n个数字a1,a2,…,an。可以执行一种操作：取i∈[1, n]，使得ai&#x3D;ai*i，对于每个i最多只能执行一次操作。问：操作多少次可以使得Π(pai，求积符号)ai能被2n整除，若...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"题记","slug":"题记","count":16,"path":"api/categories/题记.json"},{"name":"Codeforces","slug":"题记/Codeforces","count":13,"path":"api/categories/题记/Codeforces.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"题记/Codeforces/Codeforces-Round-828-Div-3","count":2,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3.json"},{"name":"D1200","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200.json"},{"name":"贪心","slug":"题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心","count":1,"path":"api/categories/题记/Codeforces/Codeforces-Round-828-Div-3/D1200/贪心.json"}],"tags":[{"name":"题记","slug":"题记","count":16,"path":"api/tags/题记.json"},{"name":"codeforces","slug":"codeforces","count":13,"path":"api/tags/codeforces.json"},{"name":"贪心","slug":"贪心","count":9,"path":"api/tags/贪心.json"},{"name":"D1200","slug":"D1200","count":2,"path":"api/tags/D1200.json"},{"name":"Codeforces Round#828 (Div. 3)","slug":"Codeforces-Round-828-Div-3","count":2,"path":"api/tags/Codeforces-Round-828-Div-3.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}