{"title":"归并排序","uid":"c668d79bcd807cc57a11ce29c7e08a39","slug":"归并排序","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/归并排序.json","keywords":"notes","cover":null,"content":"<p>归并排序的速度一般都小于sort函数，一般用的很少，但该学还得学啊。</p>\n<h3 id=\"板子如下：\"><a href=\"#板子如下：\" class=\"headerlink\" title=\"板子如下：\"></a>板子如下：</h3><pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">void merge_sort(int q[], int l, int r)\n&#123;\n    if (l &gt;&#x3D; r) return;\n\n    int mid &#x3D; l + r &gt;&gt; 1;\n    merge_sort(q, l, mid);\n    merge_sort(q, mid + 1, r);\n\n    int k &#x3D; 0, i &#x3D; l, j &#x3D; mid + 1;\n    while (i &lt;&#x3D; mid &amp;&amp; j &lt;&#x3D; r)\n        if (q[i] &lt;&#x3D; q[j]) tmp[k ++ ] &#x3D; q[i ++ ];\n        else tmp[k ++ ] &#x3D; q[j ++ ];\n\n    while (i &lt;&#x3D; mid) tmp[k ++ ] &#x3D; q[i ++ ];\n    while (j &lt;&#x3D; r) tmp[k ++ ] &#x3D; q[j ++ ];\n\n    for (i &#x3D; l, j &#x3D; 0; i &lt;&#x3D; r; i ++, j ++ ) q[i] &#x3D; tmp[j];\n&#125;</code></pre>\n\n<h3 id=\"以下是我的听课笔记，由Acwing-yxc讲解：\"><a href=\"#以下是我的听课笔记，由Acwing-yxc讲解：\" class=\"headerlink\" title=\"以下是我的听课笔记，由Acwing yxc讲解：\"></a>以下是我的听课笔记，由Acwing yxc讲解：</h3><h4 id=\"算法思路：\"><a href=\"#算法思路：\" class=\"headerlink\" title=\"算法思路：\"></a>算法思路：</h4><p>1.确定分界点  mid &#x3D; ( l + r ) &#x2F; 2<br>2.递归排序左边和右边<br>3.归并——合二为一</p>\n","feature":false,"text":"归并排序的速度一般都小于sort函数，一般用的很少，但该学还得学啊。 板子如下：void merge_sort(int q[], int l, int r) &#123; if (l &gt;&#x3D; r) return; int mid &#x3D; l + r &gt;&...","link":"","photos":[],"count_time":{"symbolsCount":716,"symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"排序模板","slug":"算法模板/排序模板","count":3,"path":"api/categories/算法模板/排序模板.json"},{"name":"归并排序","slug":"算法模板/排序模板/归并排序","count":1,"path":"api/categories/算法模板/排序模板/归并排序.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"排序模板","slug":"排序模板","count":3,"path":"api/tags/排序模板.json"},{"name":"归并排序","slug":"归并排序","count":1,"path":"api/tags/归并排序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%BF%E5%AD%90%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">板子如下：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%98%AF%E6%88%91%E7%9A%84%E5%90%AC%E8%AF%BE%E7%AC%94%E8%AE%B0%EF%BC%8C%E7%94%B1Acwing-yxc%E8%AE%B2%E8%A7%A3%EF%BC%9A\"><span class=\"toc-text\">以下是我的听课笔记，由Acwing yxc讲解：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF%EF%BC%9A\"><span class=\"toc-text\">算法思路：</span></a></li></ol></li></ol>","author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"堆排序","uid":"5689f65fc84adf6e03dbdcbe8815a58b","slug":"堆排序","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/堆排序.json","keywords":"notes","cover":null,"text":"重点在于模拟堆的up和down操作，但是在C++中优先队列priority_queue默认是大根堆，这个板子所以写的也会非常少。 板子如下：void down(int u)&#123; int t &#x3D; u; if (u * 2 &lt;&#x3D; siz &amp;&...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"排序模板","slug":"算法模板/排序模板","count":3,"path":"api/categories/算法模板/排序模板.json"},{"name":"堆排序","slug":"算法模板/排序模板/堆排序","count":1,"path":"api/categories/算法模板/排序模板/堆排序.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"排序模板","slug":"排序模板","count":3,"path":"api/tags/排序模板.json"},{"name":"堆排序","slug":"堆排序","count":1,"path":"api/tags/堆排序.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"整数二分","uid":"f463b7e04b9afca016a6c3b848f9e77c","slug":"整数二分","date":"2022-11-01T16:00:00.000Z","updated":"2022-11-01T16:00:00.000Z","comments":true,"path":"api/articles/整数二分.json","keywords":"notes","cover":null,"text":"对于贪心，某些题会出现WA，比方说逐步贪心的时候每次取出最大值除二，会使最小值偏大如洛谷P3853，则需要用二分去搜索答案。 板子如下：bool check(int x) &#123;&#x2F;* ... *&#x2F;&#125; &#x2F;&#x2F; 检查x是否满足某种...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/categories/算法模板.json"},{"name":"二分模板","slug":"算法模板/二分模板","count":2,"path":"api/categories/算法模板/二分模板.json"},{"name":"整数二分","slug":"算法模板/二分模板/整数二分","count":1,"path":"api/categories/算法模板/二分模板/整数二分.json"}],"tags":[{"name":"算法模板","slug":"算法模板","count":17,"path":"api/tags/算法模板.json"},{"name":"二分模板","slug":"二分模板","count":2,"path":"api/tags/二分模板.json"},{"name":"整数二分","slug":"整数二分","count":1,"path":"api/tags/整数二分.json"}],"author":{"name":"SMTTY","slug":"blog-author","avatar":"/images/url.jpg","link":"/","description":"学习笔记","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}